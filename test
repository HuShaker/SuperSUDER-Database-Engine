#!/usr/bin/bash
delete_one_row(){
    echo 'enter your row number :'
    read -r number_
    if  [[  ! $number_ =~ ^[0-9]+$ ]] ;
    then
    echo "error"
    else
    sed -i "$number_ d" $tname
    echo "the row $number has been deletted :"
    fi
}
delete_one_row

#---------------------------- 

delete_from_to(){
    echo 'enter your start number :'
    read -r num_start
    echo 'enter your end number :'
    read -r num_end
    if  [[ ! $num_start =~ ^[0-9]+$ ]] ;
    then
    echo "error"
    elif  [[ ! $num_end =~ ^[0-9]+$ ]] ;
    then
    echo "error"
    else
    sed -i "$num_start,$num_end d" $tname
    echo "the rows have been deleted :"
    
    fi
}
delete_from_to
#-----------------------------------

fun_delete_from_table(){
    ls "$PWD"
    echo "Enter your table name:"
    read -r tname

    if ! [[ -e "$tname" ]]; then
        echo "Error: Table $tname doesn't exist."
    else
        echo "Enter your option:"
        select option in delete_one_row delete_from_to; do
            case $option in
                1)
                    delete_one_row
                    break
                    ;;
                2)
                    delete_from_to
                    break
                    ;;
                *)
                    echo "Error: Invalid choice."
                    ;;
            esac
        done
    fi
}

fun_delete_from_table

        





#!/bin/bash

# Declare an array
my_array=("apple" "banana" "cherry" "date" "elderberry")

# Value to search for
search_value="cherry"

# Loop through the array
for index in "${!my_array[@]}"; do
    if [ "${my_array[index]}" = "$search_value" ]; then
        echo "Index of '$search_value' is $index"
        break
    fi
done















if [ "${currentRow[$index]}" == "string" ]; then
                        if fun_validate_name "$oldValue" && fun_validate_name "$newValue"; then
                            sed -i "s/$oldValue/$newValue/" "./${current_table}_data" 
                            echo "Row Updated Successfully..."
                            sleep 3
                            clear
                            fun_table_menu
                        else
                            echo "Your Values are not valid"
                            sleep 3
                            clear
                            fun_update_table
                        fi
                    else
                        echo "Try again"
                        sleep 3
                        fun_update_table   
                    fi    
                    if [ "${currentRow[$index]}" == "number" ]; then
                        if fun_validate_name "$oldValue" && fun_validate_name "$newValue"; then
                            sed -i "s/$oldValue/$newValue/" "./${current_table}_data" 
                            echo "Row Updated Successfully..."
                            sleep 3
                            clear
                            fun_table_menu
                        else
                            echo "Your Values are not valid"
                            sleep 3
                            clear
                            fun_update_table
                        fi  
                    else
                        echo "Try again"
                        sleep 3
                        fun_update_table 
                    fi
